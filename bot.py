import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ChatPermissions, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.exceptions import ChatAdminRequired, CantRestrictSelf

import logging
import os

# –ß—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# ID —Ç–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞
CHANNEL_ID = -1002317263713

# ID –¥–≤—É—Ö –≥—Ä—É–ø–ø, –≥–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç
ALLOWED_GROUPS = [-1001363070158, -1001995633215]

# –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
WARNING_TEXT = (
    "üîí –©–æ–± –ø–∏—Å–∞—Ç–∏ –≤ –≥—Ä—É–ø—ñ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É—Ç–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–º –Ω–∞ –∫–∞–Ω–∞–ª.\n"
    "üëá –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ –¥–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏:"
)

# –ö–Ω–æ–ø–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏
SUBSCRIBE_BUTTON = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üì≤ –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è", url="https://t.me/+IsSgAN3CDshmM2IyID")
)

# –ü—Ä–∞–≤–∞ –ø—ñ—Å–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏ (–¥–æ–∑–≤–æ–ª—è—î –ø–∏—Å–∞—Ç–∏)
PERMISSIONS_FULL = ChatPermissions(
    can_send_messages=True,
    can_send_media_messages=True,
    can_send_polls=True,
    can_send_other_messages=True,
    can_add_web_page_previews=True,
    can_invite_users=True,
)

# –ü—Ä–∞–≤–∞ –¥–æ –ø—ñ–¥–ø–∏—Å–∫–∏ (–∑–∞–±–æ—Ä–æ–Ω—è—î –ø–∏—Å–∞—Ç–∏)
PERMISSIONS_RESTRICTED = ChatPermissions(
    can_send_messages=False,
    can_send_media_messages=False,
    can_send_polls=False,
    can_send_other_messages=False,
    can_add_web_page_previews=False,
    can_invite_users=False,
)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)


async def is_subscribed(user_id: int) -> bool:
    try:
        member = await bot.get_chat_member(CHANNEL_ID, user_id)
        return member.status != "left"
    except:
        return False


@dp.message_handler(lambda message: message.chat.id in ALLOWED_GROUPS)
async def restrict_if_not_subscribed(message: types.Message):
    user_id = message.from_user.id
    chat_id = message.chat.id

    # –ù–µ —á—ñ–ø–∞—î–º–æ –∞–¥–º—ñ–Ω—ñ–≤ —Ç–∞ –±–æ—Ç—ñ–≤
    try:
        member = await bot.get_chat_member(chat_id, user_id)
        if member.status in ["administrator", "creator"] or message.from_user.is_bot:
            return
    except:
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–ø–∏—Å–∫—É
    if not await is_subscribed(user_id):
        try:
            # –û–±–º–µ–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            await bot.restrict_chat_member(
                chat_id=chat_id,
                user_id=user_id,
                permissions=PERMISSIONS_RESTRICTED
            )

            # –í–∏–¥–∞–ª—è—î–º–æ –π–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            await message.delete()

            # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –≤ –≥—Ä—É–ø—ñ –∑ –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥–ø–∏—Å–∫–∏
            await bot.send_message(chat_id, WARNING_TEXT, reply_markup=SUBSCRIBE_BUTTON)

        except (ChatAdminRequired, CantRestrictSelf):
            pass
    else:
        # –Ø–∫—â–æ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–π ‚Äî –∑–Ω—ñ–º–∞—î–º–æ –æ–±–º–µ–∂–µ–Ω–Ω—è
        try:
            await bot.restrict_chat_member(
                chat_id=chat_id,
                user_id=user_id,
                permissions=PERMISSIONS_FULL
            )
        except:
            pass


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
